/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BASE 0
#define SYM 1
#define EXT 2
#define FNC 3
#define SYM2 4
#define ACCENT 5
#define SETTINGS 6

// -----------------

&sk {
    // don't release mods on other mods presses

    ignore-modifiers;
};

/ {
    behaviors {
        // Enables holding the first mod-tap key
        // by performing a tap-release-hold sequence.
        // To use it: "&qt KEYCODE1 KEYCODE2"

        qt: quick_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "QUICK_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 33 32>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33 31 30>;
            hold-trigger-on-release;
        };
    };

    macros {
        // sometimes my device thinks a modifier is being held down
        // pressing all modifiers fixes it.

        unstick: unstick {
            label = "ZM_unstick";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHIFT &kp RSHIFT &kp LCTRL &kp RCTRL &kp LALT &kp RALT &kp LGUI &kp RGUI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // both right thumb keys

        combo_accent {
            timeout-ms = <200>;
            key-positions = <32 33>;
            bindings = <&mo 0>;
        };

        // internal-left & external-right thumb keys

        combo_sym2 {
            timeout-ms = <200>;
            key-positions = <31 33>;
            bindings = <&mo 0>;
        };

        // both left thumb keys

        combo_settings {
            timeout-ms = <200>;
            key-positions = <30 31>;
            bindings = <&mo 6>;
        };

        // left index & middle fingers (home-row)
        // hold control & space for Adobe workflow

        combo_ctrl_space {
            timeout-ms = <200>;
            key-positions = <12 13>;
            bindings = <&kp LC(SPACE)>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer

        default_layer {
            label = "Base";
            bindings = <
&kp Q            &kp W         &kp F            &kp P              &kp B   &kp J     &kp L               &kp U             &kp Y             &kp RA(W)
&hml LEFT_ALT A  &hml LCTRL R  &hml LEFT_GUI S  &hml LEFT_SHIFT T  &kp G   &kp M     &hmr RIGHT_SHIFT N  &hmr RIGHT_GUI E  &hmr RCTRL RA(O)  &kp RA(A)
&kp Z            &kp X         &kp C            &kp D              &kp V   &kp K     &kp H               &kp O             &kp I             &kp DOT
                                                &kp RBKT           &gresc  &kp RBKT  &kp RBKT
            >;
        };

        num {
            bindings = <
&trans  &trans  &kp N7       &kp N8        &kp N9        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mt DLLR N4  &mt PRCNT N5  &mt CARET N6  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mt EXCL N1  &mt AT N2     &mt HASH N3   &trans  &trans  &trans  &trans  &trans
                             &kp N0        &trans        &trans  &trans
            >;
        };

        func {
            bindings = <
&trans  &trans  &kp F7      &kp F8      &kp F9  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F4      &kp F5      &kp F6  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &qt F11 F1  &qt F12 F2  &kp F3  &trans  &trans  &trans  &trans  &trans
                            &kp F10     &trans  &trans  &trans
            >;
        };

        sym_layer {
            label = "Sym.";
            bindings = <
&kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X
&kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X   &kp X
                        &mo 0   &mo 0   &trans  &trans
            >;
        };

        ext_layer {
            label = "Mods";
            bindings = <
&kp ESC    &kp C_PREV  &kp C_PP    &kp C_NEXT  &kp C_PAUSE  &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPS
&sk LALT   &sk LGUI    &sk LSHIFT  &sk LCTRL   &kp RALT     &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
&kp LC(Z)  &kp LC(X)   &kp LC(C)   &kp TAB     &kp LC(V)    &kp LC(BSPC)  &kp BSPC  &trans    &trans     &trans
                                   &trans      &kp LCTRL    &kp ENTER     &mo 0
            >;
        };

        settings_layer {
            label = "sett.";
            bindings = <
&bootloader     &none  &none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 3  &none  &unstick  &none  &bootloader
&none           &none  &none  &none       &bt BT_SEL 1  &bt BT_SEL 4  &none  &none     &none  &none
&studio_unlock  &none  &none  &none       &bt BT_SEL 2  &bt BT_SEL 5  &none  &none     &none  &studio_unlock
                              &none       &none         &none         &none
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
&trans  &trans  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans  &trans  &trans  &trans  &trans
                              &bt BT_SEL 0  &trans        &trans  &trans
            >;
        };
    };
};
